"""
data.py
Менеджер данных для работы с внешними источниками (файлы, БД и т.д.).
"""

class DataManager:
    """ Класс для загрузки и сохранения данных. """

    def __init__(self, filename="data/data.json"):
        """ Инициализация менеджера данных. """
        self.filename = filename
        self.data = {}
        DEFAULT_FILE = "data/default.json"
        SETTINGS_FILE = "data/settings.json"
        WORKING_FILE = "data/working.json"

    def get_default_settings(self):
        # Параметры - по умолчанию
        self.default_settings = {
            "Тип строения": ("Тип строения",'Квартира', ""),
            "Количество комнат": ("Количество комнат", 1, "шт"),
            "Количество этажей": ("Количество этажей", 1, "шт"),
            "Материал стен": ("Материал стен",'Кирпич красный полнотелый', ""),
            "Отделка стен": ("Отделка стен",'Штукатурка цементная', ""),
            "Материал потолка": ("Материал потолка",'Ж/Б Пустотная плита', ""),
            "Высота потолка": ("Высота потолка",2.75 , "м"),
            "Финишная отделка потолка": ("Финишная отделка потолка",'ПВХ натяжной или тканевый', ""),
            "Добавить комнату": ("Добавить комнату",False, ""),
            "Длина помещения": ("Длина помещения", 4.0, "м"),
            "Ширина помещения": ("Ширина помещения", 3.0, "м"),
            "Добавить проем": ("Добавить проем",False, ""),
            "Ширина проема": ("Ширина проема", 80, "м"),
            "Добавить подвальный этаж": ("Добавить подвальный этаж",False, ""),
            "Добавить технологический этаж": ("Добавить технологический этаж",False, ""),
            "Промышленное здание": ("Промышленное здание",False, ""),
            "Промышленное здание(тип)": ("Промышленное здание(тип)",'Ангар из стальных конструкций', ""),
            "Длина здания": ("Длина здания", 6.0, "м"),
            "Ширина здания": ("Ширина здания", 3.0, "м"),
            "Высота здания": ("Высота здания", 3.5, "м"),
            "Материал проводки": ("Материал проводки",'Медь', ""),
            "Количество проводников": ("Количество проводников",'2-х жильный с одинарной изоляцией', ""),
            "Тип монтажа": ("Тип монтажа",'Открытый монтаж по стене', ""),
            "Варианты компоновки": ("Варианты компоновки",'Одно помещение - одна РК', ""),
            "Тема интерфейса": ("Тема интерфейса",'Системная', ""),
            "Шрифт": ("Шрифт",'Arial', ""),
            "Размер шрифта": ("Размер шрифта", 14, "")
        } 
        return self.default_settings

    def get_default_table(self):
        # Дефолтные данные для таблицы
        self.table_columns = [
                "Тип строения",
                "Количество комнат",
                "Количество этажей",
                "Материал стен",
                "Отделка стен",
                "Материал потолка",
                "Высота потолка",
                "Финишная отделка потолка",
                "Длина помещения",
                "Ширина помещения",
                "Ширина проема",
                "Промышленное здание(тип)",
                "Длина здания",
                "Ширина здания",
                "Высота здания",
                "Материал проводки",
                "Количество проводников",
                "Тип монтажа",
                "Варианты компоновки",
                "Тема интерфейса",
                "Шрифт",
                "Размер шрифта"
           ]
        # Возвращаем только названия колонок
        return self.table_columns

    def default_data(self, name):
        # Параметры - по умолчанию
        self.default_settings = {
            "Тип строения": ("Тип строения",'Квартира', ""),
            "Количество комнат": ("Количество комнат", 1, "шт"),
            "Количество этажей": ("Количество этажей", 1, "шт"),
            "Материал стен": ("Материал стен",'Кирпич красный полнотелый', ""),
            "Отделка стен": ("Отделка стен",'Штукатурка цементная', ""),
            "Материал потолка": ("Материал потолка",'Ж/Б Пустотная плита', ""),
            "Высота потолка": ("Высота потолка",2.75 , "м"),
            "Финишная отделка потолка": ("Финишная отделка потолка",'ПВХ натяжной или тканевый', ""),
            "Добавить комнату": ("Добавить комнату",False, ""),
            "Длина помещения": ("Длина помещения", 4.0, "м"),
            "Ширина помещения": ("Ширина помещения", 3.0, "м"),
            "Добавить проем": ("Добавить проем",False, ""),
            "Ширина проема": ("Ширина проема", 80, "м"),
            "Добавить подвальный этаж": ("Добавить подвальный этаж",False, ""),
            "Добавить технологический этаж": ("Добавить технологический этаж",False, ""),
            "Промышленное здание": ("Промышленное здание",False, ""),
            "Промышленное здание(тип)": ("Промышленное здание(тип)",'Ангар из стальных конструкций', ""),
            "Длина здания": ("Длина здания", 6.0, "м"),
            "Ширина здания": ("Ширина здания", 3.0, "м"),
            "Высота здания": ("Высота здания", 3.5, "м"),
            "Материал проводки": ("Материал проводки",'Медь', ""),
            "Количество проводников": ("Количество проводников",'2-х жильный с одинарной изоляцией', ""),
            "Тип монтажа": ("Тип монтажа",'Открытый монтаж по стене', ""),
            "Варианты компоновки": ("Варианты компоновки",'Одно помещение - одна РК', ""),
            "Тема интерфейса": ("Тема интерфейса",'Системная', ""),
            "Шрифт": ("Шрифт",'Arial', ""),
            "Размер шрифта": ("Размер шрифта", 14, "")
        }
        # Дефолтные данные для таблицы
        self.table_columns = [
                "Тип строения",
                "Количество комнат",
                "Количество этажей",
                "Материал стен",
                "Отделка стен",
                "Материал потолка",
                "Высота потолка",
                "Финишная отделка потолка",
                "Длина помещения",
                "Ширина помещения",
                "Ширина проема",
                "Промышленное здание(тип)",
                "Длина здания",
                "Ширина здания",
                "Высота здания",
                "Материал проводки",
                "Количество проводников",
                "Тип монтажа",
                "Варианты компоновки",
                "Тема интерфейса",
                "Шрифт",
                "Размер шрифта"
           ]

        if name == "default_table":
            return self.table_columns
        elif name == "default_settings":
            return self.default_settings
        else:
            return None

    def load_data(self):
        """ Загрузка данных из файла. """
        try:
            with open(self.filename, "r", encoding="utf-8") as file:
                import json
                self.data = json.load(file)
        except FileNotFoundError:
            self.data = {}

    def save_data(self):
        """ Сохранение данных в файл. """
        with open(self.filename, "w", encoding="utf-8") as file:
            import json
            json.dump(self.data, file, indent=4)

    def get_data(self, key):
        """ Получение данных по ключу. """
        return self.data.get(key, None)

    def set_data(self, key, value):
        """ Установка данных по ключу. """
        self.data[key] = value
